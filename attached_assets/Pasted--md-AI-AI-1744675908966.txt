好的，以下是为你生成的 .md 格式的专业技术需求文档，已去除模型按钮的前端提示，假设按钮功能已在页面上实现。文档结构清晰，适合直接作为项目说明或喂给 AI 智能协作者进行开发：

⸻



# AI 对话平台扩展模块需求文档（搜索增强 + 提示词注入）

## 项目目标

构建一个通用自学辅助型 AI 对话平台的增强模块，支持如下功能：

- 多模型后端 API 动态调用（按钮已完成）
- 网络搜索辅助（基于 MCP 协议）
- 管理员提示词注入系统
- RAG（检索增强生成）能力通过实时搜索实现，而非本地知识库

---

## 模块说明

### 1. 模型调用控制模块

- 前端已完成模型按钮，点击传入对应模型标识
- 后端根据标识动态调用不同模型的 API 接口

#### 统一接口示例（伪代码）：

```ts
POST /chat

body: {
  modelId: 'gpt-4',
  message: '什么是RAG架构？',
  useWebSearch: true
}

switch (modelId) {
  case 'gpt-4': return callOpenAI(message);
  case 'claude': return callAnthropic(message);
  case 'mistral': return callLocalMistral(message);
}



⸻

2. 搜索驱动型 RAG 实现（基于 MCP）
	•	MCP 协议用于发起 Google/Bing/Brave 等搜索请求
	•	搜索摘要结构如下：

[
  {
    "title": "什么是RAG？",
    "snippet": "RAG（Retrieval-Augmented Generation）是一种结合搜索与生成的混合AI结构。",
    "url": "https://example.com/rag-intro"
  },
  ...
]

	•	后端将搜索摘要整合为上下文并注入到模型提示词中

注入模板示例：

请基于以下搜索结果回答用户的问题：

1. {{title1}}：{{snippet1}}（来源：{{url1}})
2. {{title2}}：{{snippet2}}（来源：{{url2}})
...

问题：{{user_input}}



⸻

3. 管理员提示词注入模块
	•	提供后台接口及前端 GUI 支持，供管理员设置提示模板
	•	支持按模型设置
	•	模板支持变量插值（{{user_input}}、{{date}}、{{source}}）

接口设计：

GET /admin/prompts?modelId=gpt-4
POST /admin/prompts
body: {
  modelId: 'gpt-4',
  promptText: '你是一个学习型AI，请准确回答用户问题...'
}

存储结构建议：

{
  "modelId": "gpt-4",
  "promptTemplate": "你是一个...",
  "updatedAt": "2025-04-15T12:00:00Z"
}



⸻

4. 前端交互功能（已完成）
	•	模型按钮：已完成，点击切换模型
	•	网络搜索开关：用于控制是否注入搜索内容
	•	管理员面板：
	•	提示词模板编辑器（支持保存、测试）
	•	搜索工具绑定可视化（是否启用搜索）

⸻

技术建议

模块	推荐技术
后端框架	TypeScript + Express / Python + FastAPI
搜索调用	MCP 协议 / Serper API / Google CSE
模板注入	Handlebars / EJS
权限管理	JWT + RBAC
存储	SQLite / PostgreSQL（推荐配合 pgvector）



⸻

附加功能建议（预留）

功能	描述
搜索日志记录	保存用户提问及搜索摘要，用于调试或分析
结果高亮	模型响应中标注使用了哪些搜索摘要（如“[1]”、“[2]”）
本地缓存搜索	避免重复请求、节省配额（配置TTL缓存）



⸻

AI 提示词用例

可用于调用智能体生成代码或自动实现：

你是一个资深全栈 AI 工程师，请根据以下需求实现：

- 支持不同模型调用（模型按钮已完成）
- 用户可选择是否启用网络搜索（开关已完成）
- 使用 MCP 协议从网络实时获取搜索摘要
- 将搜索结果作为提示词上下文注入
- 管理员可以设置不同模型的前置提示词模板
- 提示词模板支持变量插值
- 所有后端接口应为 RESTful 风格，支持 JSON 传参
- 前端已搭建好，仅需提供后端接口与逻辑

请按模块输出后端代码结构与建议实现细节。



⸻



你可以复制这份 `.md` 文件内容到文档系统、GitHub README、或者直接粘贴到提示词输入框用于触发生成实现。  
需要我接下来帮你写后端接口代码吗？我可以从 `POST /chat` 和搜索注入逻辑开始写起。